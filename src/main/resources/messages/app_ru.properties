# Description of exceptions. Realization of RFC 7807 -> get these descriptions via 'type' parameter in http response.
problems.auth.notFound=NotFoundException бросается при попытке аутентифицироваться через незарегистрированный идентификатор. В данный момкент аутентификаия доступна только через электронную почту.
problems.auth.expired=ExpiredAuthenticationException бросается в случае экспирации JWT. JWT выдаётся сроком на 3 дня. В данный момент автоматичсекая пролонгация не реализована.
problems.auth.deleted=DeletedAuthenticationException бросается в случае, когда пользователь, который был подвержен "мягкому" удалению, пытается аутентифицироваться. В данный момент восстановление удаленного аккаунта недоступно.
problems.auth.banned=BannedAuthenticationException бросается при попытке аутентификации пользователя, который был забанен. Для восстановления доступа к аккаунту необходимо связаться с админом.
problems.notFound=NotFoundException бросается в случае, когда ресурс не был найден. Вероятнее всего ресур по запрашиваеммому идентификатору никогда не существовал, либо подвергся полному удалению.
problems.alreadyExists=AlreadyExistsException бросается при попытке создать или обновить ресурс, данные которого нарушают уникальные ограничения в базе данныхю.
problems.notAvailable=NotAvailableException бросается в случае, когда запрашиваемый ресурс недоступен по тем или иным причинам. Недоступные ресурсы могут не поддерживать определённые операции.
problems.deleted=DeletedEntityException бросается в случае, когда запрашиваемый ресурс был "мягко" удалён. Некоторые из этих ресурсов могут быть недоступны для пользователей, также некоторые эти ресурсы могут не поддерживать определенные операции.
problems.deadline=DeadlineException бросается в случае, когда запрашиваемая операция недоступна после окончания дедлайна.

problem.title.authExpired = Срок действия аутентификации истёк
problem.title.authBanned = Забанен
problem.title.notFound = Не найдено
problem.title.alreadyExists = Уже существует
problem.title.notAvailable = Недоступно
problem.title.deleted = Удалено
problem.title.deadline = Дедлайн истёк
problem.title.badRequest = Плохой запрос
problem.title.badData = Неверные данные
problem.title.dataConflict = Конфликт на уровне базы данных
problem.title.unauthorized = Неавторизован
problem.title.forbidden = Запрещено
problem.title.appError = Ошибка приложения
problem.detail.validationFailed = Ошибка валидации

error.authNotFound=Пользователь {0} не зарегистрирован
error.authDeleted=Пользователь {0} был удалён
error.authBanned=Пользователь {0} был забанен
error.authExpired=Срок действия аутентификации истёк
error.notFound.user = Пользователь {0} не найден
error.notFound.restaurant = Ресторан {0} не найден
error.notFound.dish = Блюдо {0} не найдено в ресторане {1}
error.notFound.lunch = Ланч на {0} не найден в ресторане {1}
error.alreadyExists.restaurant=Ресторан {0} уже существует
error.alreadyExists.dish=Блюдо {0} уже существует в ресторане {1}
error.alreadyExists.email=Электронная почта уже зарегистрирована
error.alreadyExists.userName=Имя пользователя занято
error.notAvailable.restaurant=Ресторан {0} недоступен
error.notAvailable.dish=Блюдо {0} недоступно в ресторане {1}
error.notAvailable.lunch=Ланч на {0} недоступен в ресторане {1}
error.deleted.restaurant=Ресторан {0} был удалён
error.deleted.dish=Блюдо {0} было удалено из ресторана {1}
error.passwordIncorrect=Неверный пароль
error.passwordSameAsPrevious=Новый пароль должен отличаться от предыдущего
error.duplicatedDishes=Ланч должен содержать уникальные блюда
error.noHtml=Не должно содержать HTML
error.notBlank=Не должно быть пустым
error.emailFormat=Должно иметь формат электронной почты
error.size=Должно иметь длину от {min} до {max}
error.range=Должно иметь значение от $0.{min} до ${max}

